
//Pseudocode 

main(){

	guiEvent event = waitForGUI();
	if(event == "clicked start button"){
		networkInitialize();
	}

	startbyte = 0x01;
	networkSend("startbyte");

	vector<int **> frames;
	vector<GPS> coordinates;
	unsigned int current = 0;
	int frame[60][80];
	GPS coordinate;
	unsigned int numHotspots = 0;

	vector<int> hotspotFrames;
	vector<GPS> hotspotGPS;

	while(event != "clicked stop button"){

		time elapsed = time.start();
		networkReceive(frame, gps);
		
		frames.pushback(frame);
		coordinates.pushback(coordinate);
		numFrames = numFrames + 1;

		bool hotspot = false;
		hotspot = imageProcessing(frame);

		if(hotspot){
			numHotspots = numHotspots  + 1;

			hotspotFrames.pushback(frame);
			hotspotGPS.pushback(GPS);

			markMap(GPS);
			updateHotspotList(frame, GPS);
			displayImage(frame);
			updateStats(elapsed, numHotspots, coordinate);
		}
	}
	
	image visImage;

	event = waitForGUI();
	networkSend(hotspotGPS);
	while(event != "clicked stop button"){
		networkReceive(visImage);
		displayImage(visImage);
		writeToFolder(visImage);
	}
	for i less than current
		writeToFile(frames);
		writeToFile(coordinates);
		writeToFile(elapsed, numhotspots, hotspotGPS);
}


//networking modules

networkInit(){
	socket.open();
	IP address = ip; //changes depending on connection
}

networkSend(data){
	socket.send(data); //socket does TCP/UDP wrapping

}

networkReceive(structure){
	structure = socket.receive(); //Read in data bytes from network, extract from TCP/UDP frame
	return structure;
}

//Image processing

bool imageProcessing(frame){
	minThreshold = TBD;
	maxThreshold = TBD;
	minArea = TBD;
	maxArea = TBD;

	cv.SimpleBlobDetector_create(filterBy: [minThreshold, maxThreshold, minArea, maxArea]);
	cv.detect(frame, KeyPoint, mask, outputArray); //I'm not sure exactly how the KeyPoint class works yet, but it's basically the features we're looking for in a blob
	return !empty(); //returns true if output result from detect is empty  	
}

//Since Jason just suggested this on Tuesday, I'm still not solid on all the details here.